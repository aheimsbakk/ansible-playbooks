---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
    auto-update-hour: '00'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
        - name: grafana-init
          image: docker.io/alpine:latest
          command:
            - chown
            - -R
            - "472"
            - /mnt
          volumeMounts:
            - name: grafana-data
              mountPath: /mnt
      containers:
        - name: grafana
          image: docker.io/grafana/grafana:latest
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - name: web
              containerPort: 3000
          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
      volumes:
        - name: grafana-data
          hostPath:
            type: DirectoryOrCreate
            path: /srv/grafana/data
        - name: grafana-config
          configMap:
            name: grafana-config

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      name: web
      port: 3000

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: grafana
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: private-ip-ranges@file
  labels:
    app: grafana
spec:
  rules:
    - host: grafana.192.168.56.11.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
