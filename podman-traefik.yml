---
- name: container traefik
  hosts: podman
  become: true

  vars:
    container_customization: "{{ container_traefik | default( {} ) }}"
    container_defaults:
      image: docker.io/traefik:v2.5
      name: traefik
      network:
        - dmz
        - int
      publish:
        - 80:80/tcp
        - 443:443/tcp
        - 443:443/udp
      generate_systemd: "{{ generate_systemd | default(omit) }}"
      volume:
        - /srv/traefik/config:/etc/traefik:z,U
        - /srv/traefik/acme:/acme:z,U
      env:
        TRAEFIK_API: "true"
        TRAEFIK_LOG_LEVEL: debug
        TRAEFIK_ACCESSLOG: "true"
        TRAEFIK_EXPERIMENTAL_HTTP3: "true"
        # don't verfy tls on dockers
        TRAEFIK_SERVERSTRANSPORT_INSECURESKIPVERIFY: "true"
        TRAEFIK_SERVERSTRANSPORT_MAXIDLECONNSPERHOST: "5"
        # file provider
        TRAEFIK_PROVIDERS_FILE_DIRECTORY: /etc/traefik
        # docker provider
        TRAEFIK_PROVIDERS_DOCKER: "true"
        TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: "false"
        TRAEFIK_PROVIDERS_DOCKER_NETWORK: dmz
        TRAEFIK_PROVIDERS_DOCKER_DEFAULTRULE: host(`{{ "{{ '{{' }} (split `-` .Name)._0 {{ '}}' }}" }}.10.10.10.10.nip.io`)
          #TRAEFIK_PROVIDERS_DOCKER_DEFAULTRULE: "host(`{{ '{{' }} (split `-` .Name)._0 {{ '}}' }}.10.10.10.10.nip.io`)"
        TRAEFIK_PROVIDERS_DOCKER_ENDPOINT: http://podman-socket:2375
        # listen to port 80 and redirect to 443
        TRAEFIK_ENTRYPOINTS_WEB_ADDRESS: :80
        TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_TO: websecure
        TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_SCHEME: https
        # listen to port 443 with ssl
        TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS: :443
        TRAEFIK_ENTRYPOINTS_WEBSECURE_ENABLEHTTP3: "true"
        TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS: "true"
        TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_OPTIONS: mintls12@file
        # TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_CERTRESOLVER: letsencrypt
        TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_MIDDLEWARES: default-https-headers
        # # letsencrypt, enable and use prod api in production
        # TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT: "true"
        # TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_CASERVER: https://acme-staging-v02.api.letsencrypt.org/directory
        # TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_CASERVER: https://acme-v02.api.letsencrypt.org/directory
        # TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL: my@email.foo
        # TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_STORAGE: /acme/letsencrypt.json
        # TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_TLSCHALLENGE: "true"
      label:
        io.containers.autoupdate: registry
        traefik.enable: "true"
        traefik.http.middlewares.private-ip-ranges.ipwhitelist.sourcerange: "192.168.0.0/16,172.16.0.0/12,10.0.0.0/8"
        traefik.http.middlewares.private-ip-ranges-no-podman.ipwhitelist.sourcerange: "192.168.0.0/16,172.16.0.0/12,10.10.10.1"
        traefik.http.middlewares.default-https-headers.headers.customFrameOptionsValue: "SAMEORIGIN"
        traefik.http.middlewares.default-https-headers.headers.framedeny: "true"
        traefik.http.middlewares.default-https-headers.headers.sslredirect: "true"
        traefik.http.middlewares.default-https-headers.headers.stsIncludeSubdomains: "true"
        traefik.http.middlewares.default-https-headers.headers.stsPreload: "true"
        traefik.http.middlewares.default-https-headers.headers.stsSeconds: "15552000"
        traefik.http.middlewares.default-https-headers.headers.referrerPolicy: "same-origin"
        traefik.http.routers.traefik.service: "api@internal"
        traefik.http.routers.traefik.entrypoints: "websecure"
        traefik.http.routers.traefik.middlewares: "private-ip-ranges-no-podman"

  tasks:
    - name: tls configuration
      ansible.builtin.copy:
        dest: /srv/traefik/config/tls.yml
        mode: 0644
        content: |
          tls:
            options:
              mintls13:
                minVersion: VersionTLS13
              mintls12:
                minVersion: VersionTLS12
                cipherSuites:
                  - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
                  - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
                  - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
                  - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
                  - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256

    - name: download and run container
      ansible.builtin.include_tasks:
        file: podman-run.yml
